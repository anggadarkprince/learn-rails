<ol class="breadcrumb pl-0 bg-transparent">
  <li class="breadcrumb-item">
    <a href="<%= root_path %>">
      <%= t(:menu_articles) %>
    </a>
  </li>
  <li class="breadcrumb-item">
    <a href="<%= blog_category_path slug: article.category.slug %>">
      <%= article.category.category %>
    </a>
  </li>
  <li class="breadcrumb-item active"><%= article.title %></li>
</ol>

<img class="mb-3" style="height: 230px; width: 100%; display: block; background: url('/images/features/<%= article.featured %>') center center / cover">

<h3><%= article.title %></h3>
<ul class="list-inline list-node">
  <li class="list-inline-item">
    <%= article.created_at.strftime('%B %d, %Y %I:%M %p') %>
  </li>
  <li class="list-inline-item">
    <%= t(:label_posted_by) %>
    <a href="/author/<%= article.user.username %>">
      <%= article.user.name %>
    </a>
  </li>
  <li class="list-inline-item">
    <%= article.comments.count %> <%= t(:label_comments) %>
  </li>
  <li class="list-inline-item">
    <%= article.views %>x <%= t(:label_views) %>
  </li>
</ul>
<article>
  <%= raw article.content %>
</article>

<div class="lead mb-5">
  <% article.tags.each do |tag| %>
      <a href="/tag/<%= tag.slug %>" class="badge badge-pill badge-tag badge-primary">
        #<%= tag.tag %>
      </a>
  <% end %>
</div>

<script type="text/javascript" charset="utf-8">
    $(document).ready(function () {
        var viewerStorageKey = 'blogstrap-viewer';
        var voterStorageKey = 'blogstrap-voter';

        var localViewerData = localStorage.getItem(viewerStorageKey);
        var localVoterData = localStorage.getItem(voterStorageKey);

        var viewHistory = localViewerData == null ? [] : JSON.parse(localViewerData)
        var voteHistory = localVoterData == null ? [] : JSON.parse(localVoterData)

        function checkHistory(data, key) {
            var isExist = false;
            for (var i = 0; i < data.length; i++) {
                if (key == data[i]) {
                    isExist = true;
                    break;
                }
            }
            return isExist;
        }

        if (!checkHistory(viewHistory, <%= article.id %>)) {
            setTimeout(function () {
                $.ajax({
                    url: '<%= count_article_url %>',
                    method: 'post',
                    dataType: 'json',
                    data: {
                        id: '<%= article.id %>',
                        authenticity_token: window._token
                    },
                    success: function (data) {
                        viewHistory.push(data.result.id);
                        localStorage.setItem(viewerStorageKey, JSON.stringify(viewHistory));
                    },
                    error: function (data) {
                        console.log(data.message);
                        debugger;
                    }
                })
            }, 15000);
        }

        $('.btn-vote').on('click', function (e) {
            e.preventDefault();

            var parent = $(this).closest('ul');
            var commentId = parent.data('id');

            if (!checkHistory(voteHistory, commentId)) {
                parent.find('.btn-vote').addClass('disabled');

                var counterTag = parent.find('.vote-counter');
                var operatedWith = $(this).data('type') === 'up' ? 1 : -1;
                var operationResult = parseInt(counterTag.text()) + operatedWith;
                counterTag.html(operationResult).addClass(operationResult > 0 ? 'text-primary' : 'text-danger');

                $.ajax({
                    url: $(this).attr('href'),
                    method: 'post',
                    dataType: 'json',
                    data: {
                        id: commentId,
                        authenticity_token: window._token
                    },
                    success: function (data) {
                        voteHistory.push(data.result.id);
                        localStorage.setItem(voterStorageKey, JSON.stringify(voteHistory));
                    },
                    error: function (data) {
                        console.log(data.message);
                        debugger;
                    }
                });
            }
        })

        $('.comment-control').each(function () {
            var commentId = $(this).data('id');
            if (checkHistory(voteHistory, commentId)) {
                $(this).find('.btn-vote').addClass('disabled');
                var counterTag = $(this).find('.vote-counter');
                counterTag.addClass(parseInt(counterTag.text()) > 0 ? 'text-primary' : 'text-danger')
            }
        });
    });
</script>